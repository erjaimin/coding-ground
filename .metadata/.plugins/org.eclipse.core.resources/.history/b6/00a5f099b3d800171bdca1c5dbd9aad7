package com.mvc.controller;

import java.awt.Dimension;

import com.mvc.model.Memento;
import com.mvc.model.PerspectiveModel;

public class ZoomCommand implements ViewActionCommand {

	private PerspectiveModel model;
	private int notches;
	private double zoom;
	private Memento memento;
	
	public ZoomCommand(PerspectiveModel model) {
		this.model = model;
	}
	
	public boolean calculateZoom() {
		boolean resize = false;
		zoom = model.getZoom();
		double temp = zoom - (getNotches() * 0.05);
		if (temp != zoom && temp > 0.2 && temp < 1.8) {
            zoom = temp;
            memento.setZoomLevel(zoom);
            model.setZoom(zoom);
           
            this.dimension = new Dimension(newWidth, newHeight);
            resize = true;
        }
		return resize;
	}
	
	@Override
	public void execute() {
		int newWidth = (int) (model.getImage().getWidth() * zoom);
		int newHeight = (int) (model.getImage().getHeight() * zoom);
		model.updateDimentions(newWidth, newHeight);
	}

	/**
	 * @return the notches
	 */
	public int getNotches() {
		return notches;
	}

	/**
	 * @param notches the notches to set
	 */
	public void setNotches(int notches) {
		this.notches = notches;
	}

	@Override
	public void unexecute() {
		// TODO Auto-generated method stub
		
	}

}
