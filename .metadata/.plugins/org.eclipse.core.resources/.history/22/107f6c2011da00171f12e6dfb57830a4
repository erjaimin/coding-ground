package hashMap;

/**
 * 
 * @author
 *
 * @param <K>
 * @param <V>
 */
public  class HashNode<K,V> implements Cloneable{
	private V value;
	private K key;
	public HashNode<K,V> next;

	/**
	 * creates an instance of {@link HashNode}
	 * @param key
	 * @param value
	 */
	HashNode(K key, V value){
		this.setValue(value);
		this.key = key;
		this.next = null;
	}

	//ADD HELPER METHODS BELOW HERE

	// Hint: Implement a  'Public' clone() method

	//ADD HELPER METHODS ABOVE HERE
	
	 public Object clone() throws CloneNotSupportedException{ 
		 HashNode<K,V> hashNode = (HashNode<K,V>)super.clone();
		 hashNode.key = this.key;
		 hashNode.value = this.value;
		 hashNode.next = this.next;
	}

	/*
	 * Returns this hash entry's value. 
	 * Assume entry is not null.
	 */

	public V getValue(){
		return this.value;
	}
	/*
	 * Returns this hash nodes's key.  
	 * Assume entry is not null.
	 * @return This hash nodes's key
	 */

	public K getKey(){
		return this.key;
	}
	/*
	 * Return Next node
	 */
	HashNode<K,V> getNext(){
		return this.next;
	}

	@Override
	public String toString() {
		/*
		 * Implemented method. You do not need to modify.
		 */
		return key.toString()+" : " + getValue().toString();
		//return  value.toString();
	}

	/**
	 * @param value the value to set
	 */
	public void setValue(V value) {
		this.value = value;
	}

}
